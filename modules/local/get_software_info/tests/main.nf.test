// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test splitmultiallelic
nextflow_process {

    name "Test Process SPLITMULTIALLELIC"
    script "../main.nf"
    process "SPLITMULTIALLELIC"

    tag "modules"
    tag "modules_nfcore"
    tag "splitmultiallelic"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("splitmultiallelic - vcf") {

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = Channel.of([
                    [ id : 'test_sample' ], // meta map
                    file("/mnt/tblab/yolanda/GT-Bioinfo/test_gatk4_vcf/fix_mapping_test_dragen_2/bcftools/Sample1_T1.gatk.PASS.vcf.gz", checkIfExists: true),
                    file("/mnt/tblab/yolanda/GT-Bioinfo/test_gatk4_vcf/fix_mapping_test_dragen_2/bcftools/Sample1_T1.gatk.PASS.vcf.gz.tbi", checkIfExists: true),
                    "GK"
                ])
                input[1] =  Channel.fromList([
                    tuple([ id: 'genome'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true))
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
            )
        }

    }
}