nextflow_workflow {

    name "Test Subworkflow SNV_ANNOTATION"
    script "../main.nf"
    config "./nextflow.config"

    workflow "SNV_ANNOTATION"
    tag "subworkflows"
    tag "snv_annotation"


    setup {
        
        run("ENSEMBLVEP_DOWNLOAD") {
            script "../../../../modules/nf-core/ensemblvep/download/main.nf"

            process {
                """
                input[0] = Channel.of([
                    [id:"homo_sapiens_hg38"],
                    "GRCh38",
                    "homo_sapiens_refseq",
                    "113"
                ])
                """
            }
        }

        run("TABIX_BGZIP") {
            script "../../../../modules/nf-core/tabix/bgzip/main.nf"

            process {
                """
                input[0] = Channel.value([
                    [id:"fasta"],
                    file("https://hgdownload.soe.ucsc.edu/goldenPath/hg38/chromosomes/chr1.fa.gz")])
                """
            }
        }
    } 

    test("annotation download cache - vcf") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id:'test'], // meta map
                    file("https://zenodo.org/records/15730236/files/NA12878-HG001.hg38.final.chr1.chr22.vcf.gz?download=1", checkIfExists: true),
                    file("https://zenodo.org/records/15730236/files/NA12878-HG001.hg38.final.chr1.chr22.vcf.gz.tbi?download=1.tbi", checkIfExists: true)
                ])
                input[1] = TABIX_BGZIP.out.output
                input[2] = Channel.value('GRCh38')
                input[3] = "homo_sapiens"
                input[4] = "113"
                input[5] = ENSEMBLVEP_DOWNLOAD.out.cache.map{ meta, cache -> [cache] }
                input[6] = Channel.of([ id: 'test' ], [])
                input[7] = []
                input[8] = 0.01
                input[9] = file("https://raw.githubusercontent.com/TBLabFJD/GLOWgenes/master/precomputed_panelAPP/GLOWgenes_prioritization_Acute_rhabdomyolysis_GA.txt", checkIfExists: true) 
                input[10] = file("https://raw.githubusercontent.com/TBLabFJD/GLOWgenes/refs/heads/master/SGDS.csv", checkIfExists: true) 
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }


    test("annotation local cache - vcf") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id:'test'], // meta map
                    file("https://zenodo.org/records/15730236/files/NA12878-HG001.hg38.final.chr1.chr22.vcf.gz?download=1", checkIfExists: true),
                    file("https://zenodo.org/records/15730236/files/NA12878-HG001.hg38.final.chr1.chr22.vcf.gz.tbi?download=1.tbi", checkIfExists: true)
                ])
                input[1] = TABIX_BGZIP.out.output
                input[2] = Channel.value('GRCh38')
                input[3] = "homo_sapiens"
                input[4] = "112"
                input[5] = file("/mnt/genetica5/vep_2024")
                input[6] = Channel.of([ id: 'test' ], [])
                input[7] = []
                input[8] = 0.01
                input[9] = file("https://raw.githubusercontent.com/TBLabFJD/GLOWgenes/master/precomputed_panelAPP/GLOWgenes_prioritization_Acute_rhabdomyolysis_GA.txt", checkIfExists: true) 
                input[10] = file("https://raw.githubusercontent.com/TBLabFJD/GLOWgenes/refs/heads/master/SGDS.csv", checkIfExists: true) 
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }

}