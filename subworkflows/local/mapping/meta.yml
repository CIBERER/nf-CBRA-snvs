# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/subworkflows/yaml-schema.json
name: "mapping"
description: Align fastq files, and apply GATK best practices (MARKDUPLICATES, BASERECALIBRATOR, APPLYBSQR).
keywords:
  - fasta
  - bam
  - mapping
  - markduplicates
  - ApplyBQSR
components:
  - bwa/mem
  - gatk4/fastqtosam
  - gatk4/mergebamalignment
  - gatk4spark/markduplicates
  - picard/sortsam
  - gatk4/baserecalibrator
  - gatk4/applybqsr
  - samtools/sort
  - samtools/index
input:
- - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - ch_reads:
      type: file
      description: |
        The input channel containing the FastQ files
        Structure: [ val(meta), [ path(reads) ] ]
      pattern: "*.{fastq/fastq.gz}"
  - ch_intervals:
      type: file
      description: Bed file with the genomic regions included in the library (optional)
- - meta2:
      type: map
      description: |
        Groovy Map containing reference information.
        e.g. [ id:'test', single_end:false ]
  - ch_index:
      type: file
      description: BWA genome index files
      pattern: "Directory containing BWA index *.{amb,ann,bwt,pac,sa}"
- - meta3:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - ch_fasta:
      type: file
      description: Reference genome in FASTA format
      pattern: "*.{fasta,fa}"
  - ch_fai:
      type: file
      description: Reference index in FAI format
      pattern: "*.{fai}"
  - ch_refdict:
      type: file
      description: GATK sequence dictionary
      pattern: "*.dict"  
- - meta4:
      type: map
      description: |
        Groovy Map containing dbsnp information
        e.g. [ id:'test_dbsnp' ]
  - ch_known_sites:
      type: file
      description: VCF file containing known sites (optional)
  - ch_known_sites_tbi:
      type: file
      description: VCF index of dbsnp (optional)
      
output:
  - bam:
      type: file
      description: |
        Channel containing BAM files
        Structure: [ val(meta), path(bam), path(bai) ]
  - versions:
      type: file
      description: |
        File containing software versions
        Structure: [ path(versions.yml) ]
      pattern: "versions.yml"
authors:
  - "@yolandabq"
  - "@yocra3"
maintainers:
  - "@yolandabq"
  - "@yocra3"
